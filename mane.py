# -*- coding: utf-8 -*-

import os
import sys
import time
import vk_api
import requests
import traceback
from datetime import datetime
from google_trans_new import google_translator
from vk_api.longpoll import VkLongPoll, VkEventType


def mane(apikey, adminid, weatherkey):
    try:
        vk_session = vk_api.VkApi(
        token=apikey)
        longpoll = VkLongPoll(vk_session)
        vk = vk_session.get_api()
        sendmessage(adminid, vk, '–ë–æ—Ç –æ–Ω–ª–∞–π–Ω ü§ô')
        for event in longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
                firstnamecase = vk.users.get(user_id=event.user_id)[0]['first_name'] + ' '
                lastnamecase = vk.users.get(user_id=event.user_id)[0]['last_name']
                ans = '******** –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï ********\n'
                ans += str(datetime.now())[:-10]
                ans += '\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: '
                ans += str(firstnamecase) + str(lastnamecase)
                ans += '\nid: ' + str(event.user_id) + '\n–°–æ–æ–±—â–µ–Ω–∏–µ: ' + event.text
                sendmessage(adminid, vk, message=ans)
                event.text = event.text.lower()
                if event.text == "–Ω–∞—á–∞—Ç—å":
                    sendmessage(event.user_id, vk, '–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ ' + str(firstnamecase) + ' üòè')
                    sendmessage(event.user_id, vk, 'WeatherBotü§ñ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –≥–æ—Ä–æ–¥–∞ –º–∏—Ä–∞ üåç')
                    sendmessage(event.user_id, vk, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–≥–æ –≥–æ—Ä–æ–¥–∞!')
                elif event.text == "reboot":
                    if event.user_id == int(adminid):
                        sendmessage(adminid, vk, '–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω')
                        os.execl(sys.executable, sys.executable, *sys.argv)
                    else:
                        sendmessage(event.user_id, vk, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤')
                        sendmessage(adminid, vk, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ' + event.user_id + ' –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∞–≤!')
                elif event.text == "update":
                    if event.user_id == adminid:
                        sendmessage(adminid, vk, '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π')
                        os.execl(sys.executable, sys.executable, *sys.argv)
                    else:
                        sendmessage(event.user_id, vk, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤')
                        sendmessage(adminid, vk, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ' + event.user_id + ' –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∞–≤!')
                else:
                    wether(event.text, vk, event)

    except Exception:
        traceback.print_exc()
        excepterror(apikey, adminid, traceback.format_exc())
        time.sleep(3)
        mane(apikey, adminid, weatherkey)


def wether(city, vk, event):
    access_key = weatherkey
    params = {
        'access_key': access_key,
        'query': city
    }
    try:
        res = requests.get('http://api.weatherstack.com/current', params)
        data = res.json()
        data = data.get('current')
        sunylist = [['Clear'], ['Sunny']]
        rainlist = [["Heavy rain"], ["Rain"], ['Patchy rain possible']]
        smokelist = [['Smoke']]
        overcastlist = [['Partly cloudy'], ['Overcast'], ['Cloudy']]
        lightsnowlist = [['Light Rain And Snow'], ['Light Snow'], ['Light Snow Shower'], ['Snow'], ['Light snow showers']]
        hardsnowlist = [['Heavy Snow Shower'], ['Heavy Snow, Blowing Snow'], ['Blowing Snow'], ['Heavy snow']]
        thunderstormlist = [['Thunderstorm'], ['Storm'], ['Hurricane'], ['Tempest']]
        if sunylist.count(data.get('weather_descriptions')) != 0:  # —Å–æ–ª–Ω–µ—á–Ω–æ
            emoji = "‚òÄ"
            weather_descriptions = '—Å–æ–ª–Ω–µ—á–Ω–æ'
        elif rainlist.count(data.get('weather_descriptions')) != 0:    # –¥–æ–∂–¥–∏–∫
            emoji = "üåß"
            weather_descriptions = '–¥–æ–∂–¥–∏–∫'
        elif smokelist.count(data.get('weather_descriptions')) != 0:    # –¥—ã–º–∫–∞
            emoji = "üå´"
            weather_descriptions = '–¥—ã–º–∫–∞'
        elif overcastlist.count(data.get('weather_descriptions')) != 0:   # –æ–±–ª–∞—á–Ω–æ
            emoji = "‚õÖ"
            weather_descriptions = '–æ–±–ª–∞—á–Ω–æ'
        elif lightsnowlist.count(data.get('weather_descriptions')) != 0:  # —Å–ª–∞–±—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥
            emoji = "üå®"
            weather_descriptions = '—Å–ª–∞–±—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥'
        elif hardsnowlist.count(data.get('weather_descriptions')) != 0:   # —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥ –º–µ—Ç–µ–ª—å
            emoji = "üå¨"
            weather_descriptions = '—Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥ –º–µ—Ç–µ–ª—å'
        elif thunderstormlist.count(data.get('weather_descriptions')) != 0:    # –≥—Ä–æ–∑–∞
            emoji = "‚õà"
            weather_descriptions = '–≥—Ä–æ–∑–∞'
        else:
            print(data.get('weather_descriptions'))
            emoji = "üåÄ"
            weather_descriptions = str(", ".join(data.get('weather_descriptions')))
            weather_descriptions = translator.translate(weather_descriptions, lang_tgt='ru')
        sendmessage(adminid, vk, weather_descriptions)
        if weather_descriptions == '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π':
            weather_descriptions = '—è—Å–Ω–æ'
        elif weather_descriptions == '–î—ã–º':
            weather_descriptions = '–¥—ã–º–∫–∞'
        city = '–ì–æ—Ä–æ–¥: ' + str(city[0].upper())+city[1:] + ' üèô\n'
        weather_descriptions = '–ü–æ–≥–æ–¥–∞: ' + weather_descriptions.lower() + ' ' + emoji + "\n"
        temp = '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: '+str(data.get('temperature'))+"¬∞C üå°\n"
        feelslike = "–ü–æ –æ—â—É—â–µ–Ω–∏—é: "+str(data.get('feelslike'))+"¬∞C üå°\n"
        wind_dir = ''
        if data.get('wind_dir') == 'N':
            wind_dir = '—Å–µ–≤–µ—Ä–Ω—ã–π'
        elif data.get('wind_dir') == 'S':
            wind_dir = '—é–∂–Ω—ã–π'
        elif data.get('wind_dir') == 'E':
            wind_dir = '–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'W':
            wind_dir = '–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'NE':
            wind_dir = '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'NNE':
            wind_dir = '—Å–µ–≤–µ—Ä–æ-—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'NW':
            wind_dir = '—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'NNW':
            wind_dir = '—Å–µ–≤–µ—Ä–æ-—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'SE':
            wind_dir = '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'SSE':
            wind_dir = '—é–≥–æ-—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'SW':
            wind_dir = '—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'SSW':
            wind_dir = '—é–≥–æ-—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'WNW':
            wind_dir = '–∑–∞–ø–∞–¥–Ω—ã–π-—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'ENE':
            wind_dir = '–≤–æ—Å—Ç–æ—á–Ω—ã–π-—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π'
        elif data.get('wind_dir') == 'WSW':
            wind_dir = '–∑–∞–ø–∞–¥–Ω—ã–π-—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        elif data.get('wind_dir') == 'ESE':
            wind_dir = '—é–≥–æ-—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π'
        wind = "–í–µ—Ç–µ—Ä: " + wind_dir + ', ' + str(round(data.get('wind_speed')/3.6, 2)) + " –º/—Å üí®\n"
        cloud = "–í–ª–∞–∂–Ω–æ—Å—Ç—å: "+str(data.get('humidity'))+"% üíß\n"
        vis = "–í–∏–¥–µ–º–æ—Å—Ç—å: "+str(data.get("visibility"))+"–∫–º üî≠\n"
        humidity = "–û–±–ª–∞—á–Ω–æ—Å—Ç—å: "+str(data.get("humidity"))+"% ‚òÅ"

        sendmessage(adminid, vk, '–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω \n'+city + weather_descriptions +
                         temp + feelslike + wind + cloud + vis + humidity + '\n******** –°–û–û–ë–©–ï–ù–ò–ï –ó–ê–ö–†–´–¢–û ********')
        sendmessage(event.user_id, vk, city + weather_descriptions + temp + feelslike + wind + cloud + vis + humidity)

    except AttributeError:
        sendmessage(adminid, vk, '–ì–æ—Ä–æ–¥ ' + city + ' –Ω–µ –Ω–∞–π–¥–µ–Ω!')
        if event.from_user:  # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ –õ–°
            sendmessage(event.user_id, vk, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥ ü§™')
        elif event.from_chat:  # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ –ë–µ—Å–µ–¥–µ
            sendmessage(event.chat_id, vk, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥ ü§™')


def sendmessage(user, vk, message):
    vk.messages.send(user_id=user, message=message, random_id='0')

def excepterror(apikey, adminid, tracebackerror):
    vk_session = vk_api.VkApi(
    token=apikey)
    longpoll = VkLongPoll(vk_session)
    vk = vk_session.get_api()
    vk.messages.send(user_id=adminid, message=tracebackerror, random_id='0')

if __name__ == '__main__':
    apikey = open('apikey.txt', 'r').readline()
    adminid = open('adminid.txt', 'r').readline()
    weatherkey = open('weatherkey.txt', 'r').readline()
    translator = google_translator()
    mane(apikey, adminid, weatherkey)
